@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// example usage:
// col_spacing(2, 3) = take up the width of 2 columns out of a 3 column grid
@mixin col_spacing($num_col_occupy, $total_col_num) {
  // used to initially calculate how many gutters there will be
  $gutter_count: calc(#{$total_col_num} - 1);

  // extra gutter space occupied when stretching multiple cols
  $extra_gutter_space: calc(#{$gutter-horizontal} * (#{$num_col_occupy} - 1));

  width: calc(
    #{$num_col_occupy} * (
        (100% - #{$gutter_count} * #{$gutter-horizontal}) / #{$total_col_num}
      ) + #{$extra_gutter_space}
  );
}

// default values: https://anotheruiguy.gitbooks.io/sassintherealworld_book-i/content/handy-tools/setting-default-mixin-values.html
@mixin center_item($top_val: 50%, $left_val: 50%, $right_val: 0) {
  top: $top_val;
  @if $left_val > 0 {
    left: $left_val;
  } @else {
    right: $right_val;
  }
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/* 
0-600px: phone
600 - 900px: tablet portrait
900 - 1200px: tablet landscape
[1200-1800] : normal style applies
1800px + : big desktop

ORDER: Base + typography -> general layout + grid -> page layout -> components
  @include respond(phone) {
  }
  @include respond(tab-land) {
  }
  @include respond(tab-port) {
  }
  @include respond(big-desktop) {
  }

*/

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) { @content }; // 600px
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) { @content }; // 900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) { @content }; // 1200px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) { @content }; // 1800px
  }
  
}
